<UserControl xmlns:DataImportInteractive="clr-namespace:DataImport.Interactive.DataImportInteractive"  x:Class="DataImport.Interactive.DataImportInteractive.ImportFileSelecte"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" xmlns:System="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="500" d:DesignWidth="1024">

    <UserControl.Resources>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0"/>
            <GradientStop Color="#EDEDED" Offset="0.20"/>
            <GradientStop Color="#EDEDED" Offset="0.80"/>
            <GradientStop Color="#E3E3E3" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#313131" />
            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#313131"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#313131"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标题栏样式-->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Background" Value="#414141" />
            <Setter Property="Foreground" Value="#a8a8a8" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderBrush" Value="#313131"></Setter>
            <Setter Property="BorderThickness" Value="0 0 1 1"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>

        <!--行样式触发-->
        <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
        <Style  TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#f8f8f8" />

        </Style>
 
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Foreground" Value="#6e6e6e"/>
            <Setter Property="Margin" Value="8"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="22"></Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40px"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="40px"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Image Source="/DataImport.Interactive;component/Resources/Buttons/msg.png" Height="13" HorizontalAlignment="Left" Margin="8 0" ></Image>
            <TextBlock HorizontalAlignment="Left" Text="指定数据源，并选取数据导入文件" Foreground="#d6d6d6" VerticalAlignment="Center" Margin="30 0"></TextBlock>
        </Grid>
        <Grid Name="container" Grid.Row="1" Background="#414141">
            <Grid  Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition> 
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Background="#757575" Grid.ColumnSpan="4">
                    <TextBlock Text="选择一个预定义的数据导入解析器" HorizontalAlignment="Left" Foreground="White"></TextBlock>
                </Border>
                <!--第一行-->
                <TextBlock Grid.Row="1">导入解析器</TextBlock>
                <ComboBox  SelectionChanged="ScriptName_SelectionChanged" Grid.Row="1"  Name="ScriptName" Grid.Column="1" VerticalAlignment="Center" SelectedIndex="0" DisplayMemberPath="DisplayName"  ></ComboBox>
                <TextBlock Name="desc" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Left" Foreground="White"></TextBlock>

                <!--第2行-->
                <Border Background="#757575" Grid.ColumnSpan="4" Grid.Row="2">
                    <TextBlock Text="文本文件可以是分隔符格式，请选一个文本文件" HorizontalAlignment="Left" Foreground="White"></TextBlock>
                </Border>
                
                <TextBlock Grid.Row="3">数据源类型</TextBlock>
                <ComboBox Grid.Row="3" Name="FileType" Grid.Column="1"  VerticalAlignment="Center" SelectedIndex="0"  >
                    <System:String  >txt</System:String>
                    <System:String >xls/xlsx</System:String>
                    <System:String >mdb</System:String>
                    <System:String >dat</System:String>
                    <System:String >fws10</System:String>
                    <System:String >db</System:String>
                </ComboBox>
                <!--第2行-->
                <TextBlock Grid.Row="4" Grid.Column="0">导入文件</TextBlock>
                <TextBox  Grid.Row="4" Grid.Column="1"  Name="txtTemplageFile"  VerticalAlignment="Center"  Text="" Margin="0 0 25 0"  IsEnabled="False"/>
                <Image Grid.Row="4" Grid.Column="1" Name="openTemplateFile" MouseLeftButtonDown="openTemplateFile_MouseLeftButtonDown"  Margin="0 0 5 0" Cursor="Hand" Height="11" HorizontalAlignment="Right" VerticalAlignment="Center" Source="/DataImport.Interactive;component/Resources/Buttons/open.png"></Image>
                <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" >
                    <CheckBox  Click="fuck_Click" Name="fuck" IsChecked="False" Visibility="Hidden"  VerticalAlignment="Center" Grid.ColumnSpan="2" Foreground="White" Margin="5 0">强制导入</CheckBox>
                    <CheckBox Name="update" IsChecked="False" Visibility="Hidden" Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Foreground="White" Margin="5 0">同步升级解析器</CheckBox>
                </StackPanel>
               
                <!--第三行-->
                <Border Background="#757575" Grid.ColumnSpan="4" Grid.Row="5">
                    <TextBlock Text="预览数据" HorizontalAlignment="Left" Foreground="White"></TextBlock>
                </Border>
                
                <DataGrid Grid.Row="6" Visibility="Collapsed" Grid.ColumnSpan="4" Name="dataGrid"></DataGrid>
                <DataImportInteractive:ImportDataGrid Grid.Row="6" Grid.ColumnSpan="4" x:Name="importGrid" />
            </Grid>
        </Grid>

        <Grid Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"> 
                <Button Name="prvButton" Click="prvButton_Click"  HorizontalAlignment="Right" Style="{StaticResource ButtonStyle1}" Foreground="White" FontWeight="Bold" BorderThickness="0" >
                    上一步
                </Button>
                <Button Name="btNext" Click="btNext_Click" HorizontalAlignment="Right" Style="{StaticResource ButtonStyle1}" Foreground="White" FontWeight="Bold" BorderThickness="0" >
                    下一步
                </Button>
            </StackPanel>
           
        </Grid>
    </Grid>
</UserControl>
